import streamlit as st
from recognition.model import load_and_train_model, predict_digit
from recognition.image_utils import load_and_preprocess_image
from recognition.explainability import explain_prediction
from recognition.feedback import log_feedback
import plotly.express as px
import numpy as np

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="Digit Recognizer", layout="wide", initial_sidebar_state="expanded")

# –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏
st.markdown("""
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap');
    .main {
        background: linear-gradient(135deg, #1e3a8a, #3b82f6);
        font-family: 'Poppins', sans-serif;
        color: #ffffff;
    }
    .stButton>button {
        background-color: #10b981;
        color: white;
        border-radius: 8px;
        padding: 12px 24px;
        font-size: 16px;
        font-weight: 600;
        transition: all 0.3s ease;
    }
    .stButton>button:hover {
        background-color: #059669;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
    .stFileUploader {
        background-color: #ffffff;
        border-radius: 8px;
        padding: 10px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    .stSelectbox {
        background-color: #ffffff;
        border-radius: 8px;
        font-family: 'Poppins', sans-serif;
    }
    h1, h2, h3 {
        color: #ffffff;
        font-family: 'Poppins', sans-serif;
        font-weight: 700;
    }
    .sidebar .sidebar-content {
        background: #1e293b;
        color: #ffffff;
        border-radius: 8px;
        padding: 10px;
    }
    .stProgress .st-bo {
        background-color: #10b981;
    }
    .warning-box {
        background-color: #fef3c7;
        color: #b45309;
        padding: 10px;
        border-radius: 8px;
        font-size: 14px;
    }
    </style>
""", unsafe_allow_html=True)

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å
with st.sidebar:
    st.header("üìñ –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
    st.write("–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–π—Ç–µ —Ä—É–∫–æ–ø–∏—Å–Ω—ã–µ —Ü–∏—Ñ—Ä—ã —Å –ø–æ–º–æ—â—å—é –ò–ò! –ó–∞–≥—Ä—É–∂–∞–π—Ç–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (PNG, JPG) –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.")
    st.markdown("""
        <div style='text-align: center;'>
            <img src='https://media.giphy.com/media/3o7TKrHrTLiH0zE0HC/giphy.gif' alt='Animated Digit' width='150'>
            <p style='color: #ffffff;'>–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–∏—Ñ—Ä–∞</p>
        </div>
    """, unsafe_allow_html=True)

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
st.title("‚ú® –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä—É–∫–æ–ø–∏—Å–Ω—ã—Ö —Ü–∏—Ñ—Ä")
st.markdown("–ó–∞–≥—Ä—É–∑–∏—Ç–µ **–∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ** –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (PNG, JPG) —Å —Ü–∏—Ñ—Ä–æ–π, –∏ –º–æ–¥–µ–ª—å –ø—Ä–µ–¥—Å–∫–∞–∂–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç!")

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç—É
st.markdown("""
    <div class='warning-box'>
        ‚ö†Ô∏è –î–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 28x28 –ø–∏–∫—Å–µ–ª–µ–π, –∫–∞–∫ –≤ MNIST). –ù–µ–∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–≥—É—Ç —Å–Ω–∏–∑–∏—Ç—å —Ç–æ—á–Ω–æ—Å—Ç—å.
    </div>
""", unsafe_allow_html=True)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
uploaded_file = st.file_uploader(
    "–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ü–∏—Ñ—Ä–æ–π",
    type=["png", "jpg", "jpeg"],
    help="–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (PNG, JPG, JPEG) –¥–ª—è –ª—É—á—à–µ–π —Ç–æ—á–Ω–æ—Å—Ç–∏."
)

# –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏
if uploaded_file is not None:
    if st.button("–û—á–∏—Å—Ç–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"):
        uploaded_file = None
        st.experimental_rerun()

if uploaded_file is not None:
    with st.spinner("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è..."):
        try:
            col1, col2 = st.columns([1, 1])

            with col1:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                img, img_array = load_and_preprocess_image(uploaded_file)
                st.image(img, caption="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", use_column_width=True)

            with col2:
                # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
                model = load_and_train_model()
                prediction, confidence = predict_digit(model, img_array.reshape(1, -1))
                st.subheader(f"–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: **{prediction}**")
                st.markdown(f"**–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å**: {confidence:.2%}")
                
                # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
                st.progress(confidence)

            # –û–±—ä—è—Å–Ω–µ–Ω–∏–µ
            st.subheader("üîç –ö–∞–∫ –º–æ–¥–µ–ª—å —Å–¥–µ–ª–∞–ª–∞ –≤—ã–±–æ—Ä?")
            explanation = explain_prediction(model, img_array)
            fig = px.imshow(
                explanation.reshape(8, 8),
                color_continuous_scale="Viridis",
                title="–¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –≤–∞–∂–Ω–æ—Å—Ç–∏ –ø–∏–∫—Å–µ–ª–µ–π"
            )
            fig.update_layout(width=400, height=400, margin=dict(l=10, r=10, t=50, b=10))
            st.plotly_chart(fig)

            # –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
            with st.expander("üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"):
                correct_digit = st.selectbox("–ï—Å–ª–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–µ–≤–µ—Ä–Ω–æ, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ü–∏—Ñ—Ä—É:", list(range(10)))
                if st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"):
                    with st.spinner("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ..."):
                        log_feedback(uploaded_file.name, prediction, correct_digit)
                        st.success("–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! üéâ")
                        st.balloons()

        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ –∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.")

# –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
st.info("üëâ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –ø–∞–ø–∫–∏ `samples/` –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—ë –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ü–∏—Ñ—Ä–æ–π!")
